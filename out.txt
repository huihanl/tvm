Reach here python
('input_shape: ', (1, 5, 5, 4))
('W_shape: ', (3, 3, 4, 4))
('Y_shape: ', (1, 5, 5, 4))
begin weight
finish weight
finish w zero point pointer
9 
36 
36 
4 
column_offsets_
column_offsets size4
N=4 
j=0 
col_offsets[j]49 
j=1 
col_offsets[j]76 
j=2 
col_offsets[j]93 
j=3 
col_offsets[j]94 
REACH *ret = col_offsets; 
finish column offset
finish in_dim_v
finish k_v
finish stride_v
finish pad_v
After C
C_multiplier 0.0878014
column_offsets_
column_offsets size4
49 76 93 94  
BEFORE FBGEMMCONV0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 BEFORE FBGEMMCONV0.0878014
4
5
-2
4
2 0 1 0 1 0 3 0 2 0 0 0 0 0 0 0 1 1 0 0 5 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 1 0 1 0 2 0 1 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 3 4 0 3 0 0 0 5 1 0 0 4 0 0 1 6 3 4 2 AFTER FBGEMMCONV0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 AFTER FBGEMMCONV[[[[2 0 1 0]
   [1 0 3 0]
   [2 0 0 0]
   [0 0 0 0]
   [1 1 0 0]]

  [[5 0 0 0]
   [1 0 0 0]
   [0 0 0 0]
   [0 0 0 0]
   [3 0 0 0]]

  [[0 1 0 0]
   [0 0 0 0]
   [0 0 0 0]
   [1 0 0 0]
   [3 0 0 1]]

  [[0 1 0 2]
   [0 1 0 0]
   [0 0 0 0]
   [4 0 0 0]
   [0 0 0 0]]

  [[1 3 4 0]
   [3 0 0 0]
   [5 1 0 0]
   [4 0 0 1]
   [6 3 4 2]]]]
finish conv int8  
C_multiplier 0.0878014
column_offsets_
column_offsets size4
49 76 93 94  
BEFORE FBGEMMCONV0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 BEFORE FBGEMMCONV0.0878014
4
5
-2
4
2 0 1 0 1 0 3 0 2 0 0 0 0 0 0 0 1 1 0 0 5 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 1 0 1 0 2 0 1 0 0 0 0 0 0 4 0 0 0 0 0 0 0 1 3 4 0 3 0 0 0 5 1 0 0 4 0 0 1 6 3 4 2 AFTER FBGEMMCONV0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 AFTER FBGEMMCONVTraceback (most recent call last):
  File "tests/python/contrib/test_fbgemm_packedW_autotuned.py", line 377, in <module>
    test_fbgemm_conv_int8()
  File "tests/python/contrib/test_fbgemm_packedW_autotuned.py", line 329, in test_fbgemm_conv_int8
    tvm.testing.assert_allclose(y.asnumpy(), y1.asnumpy(), rtol=1e-5)
  File "/root/huihan/venv/lib/python2.7/site-packages/tvm-0.5.dev0-py2.7-linux-x86_64.egg/tvm/testing.py", line 13, in assert_allclose
    np.testing.assert_allclose(actual, desired, rtol=rtol, atol=atol, verbose=True)
  File "/root/huihan/venv/lib/python2.7/site-packages/numpy/testing/_private/utils.py", line 1452, in assert_allclose
    verbose=verbose, header=header, equal_nan=equal_nan)
  File "/root/huihan/venv/lib/python2.7/site-packages/numpy/testing/_private/utils.py", line 789, in assert_array_compare
    raise AssertionError(msg)
AssertionError: 
Not equal to tolerance rtol=1e-05, atol=1e-07

(mismatch 30.0%)
 x: array([2, 0, 1, 0, 1, 0, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 5, 0,
       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 1, 0, 1, 0, 2, 0, 1,...
 y: array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,...
